utils::head(.data[[.date]], -1),
units = .freq
)
)
) {
stop("Jumps in date column.")
}
if(is.null(.freq)){
.freq <- ts_guest_freq(.data, .date)
}
.freq = NULL
if(is.null(.freq)){
.freq <- ts_guest_freq(.data, .date)
}
if(
any(
diff(
.data[[.date]]
) != difftime(
utils::tail(.data[[.date]], -1),
utils::head(.data[[.date]], -1),
units = .freq
)
)
) {
stop("Jumps in date column.")
}
diff(
.data[[.date]]
)
difftime(
utils::tail(.data[[.date]], -1),
utils::head(.data[[.date]], -1),
units = .freq
)
.freq
utils::tail(.data[[.date]], -1)
utils::head(.data[[.date]], -1)
difftime(
utils::tail(.data[[.date]], -1),
utils::head(.data[[.date]], -1),
units = .freq
)
.freq = NULL
if(
any(
diff(
.data[[.date]]
) != difftime(
utils::tail(.data[[.date]], -1),
utils::head(.data[[.date]], -1),
units = .freq
)
)
) {
stop("Jumps in date column.")
}
diff(
.data[[.date]]
) != difftime(
utils::tail(.data[[.date]], -1),
utils::head(.data[[.date]], -1),
units = .freq
)
if(is.null(.freq)){
.freq <- ts_guest_freq(.data, .date)
}
.freq
.start = min(data[[.date]])
.start = min(.data[[.date]])
.start
.start
.freq == 1
.freq == 12
.start = lubridate::year(.start) + (lubridate::month(.start)-1)/12
.start
.start
is.null(.end)
.end = NULL
.end = max(.data[[.date]])
.end
if(is.null(.end)) {
.end = max(.data[[.date]])
if(.freq == 1){
.end = lubridate::year(.end)
} else if(.freq == 4){
quarter = as.numeric(format(.end, "%m"))/3
.end = lubridate::year(.end) + (quarter - 1)/4
} else if(.freq == 12) {
.end = lubridate::year(.end) + (lubridate::month(.end)-1)/12
} else {
.end <- .end
}
}
.end
.data[,names(data) != .date]
.data[,names(.data) != .date]
.ts <- stats::ts(
.data[,names(.data) != .date], start = .start, end = .end, frequency = .freq
)
.ts
.data[,names(.data) != .date]
.start
.end
.start = min(.data[[.date]])
if(.freq == 1){
.start = lubridate::year(.start)
} else if(.freq == 4){
quarter = as.numeric(format(.start, "%m"))/3
.start = lubridate::year(.start) + (quarter - 1)/4
} else if(.freq == 12) {
.start = lubridate::year(.start) + (lubridate::month(.start)-1)/12
} else {
.start <- .start
}
.start
.freq
lubridate::year(.start) + (lubridate::month(.start)-1)/12
.start = min(.data[[.date]])
lubridate::year(.start) + (lubridate::month(.start)-1)/12
lubridate::year(.start)
(lubridate::month(.start)-1)/12
.start
lubridate::month(.start)-1
quarter
quarter = as.numeric(format(.start, "%m"))/3
quarter
lubridate::month(.start)
lubridate::month(.start)/12
lubridate::year(.start) + lubridate::month(.start)/12
if(.freq == 1){
.start = lubridate::year(.start)
} else if(.freq == 4){
quarter = as.numeric(format(.start, "%m"))/3
.start = lubridate::year(.start) + (quarter - 1)/4
} else if(.freq == 12) {
.start = lubridate::year(.start) + lubridate::month(.start)/12
} else {
.start <- .start
}
.start
.ts <- stats::ts(
.data[,names(.data) != .date], start = .start, end = .end, frequency = .freq
)
.ts
.data[,names(.data) != .date]
.ts <- stats::ts(
.data[,names(.data) != .date] %>% as.data.frame(), start = .start, end = .end, frequency = .freq
)
.ts
if(.freq == 1){
.start = lubridate::year(.start)
} else if(.freq == 4){
quarter = as.numeric(format(.start, "%m"))/3
.start = lubridate::year(.start) + (quarter - 1)/4
} else if(.freq == 12) {
.start = lubridate::year(.start) + (lubridate::month(.start)-1)/12
} else {
.start <- .start
}
.start = min(.data[[.date]])
if(.freq == 1){
.start = lubridate::year(.start)
} else if(.freq == 4){
quarter = as.numeric(format(.start, "%m"))/3
.start = lubridate::year(.start) + (quarter - 1)/4
} else if(.freq == 12) {
.start = lubridate::year(.start) + (lubridate::month(.start)-1)/12
} else {
.start <- .start
}
stats::ts(
.data[,names(.data) != .date], start = .start, end = .end, frequency = .freq
)
.ts <- stats::ts(
.data[,names(.data) != .date]
)
.ts
.ts <- stats::ts(
.data[,names(.data) != .date], frequency = .freq
)
.ts
.ts <- stats::ts(
.data[,names(.data) != .date],
start = .start,
#end = .end,
frequency = .freq
)
.ts
numeric()
#    .end = lubridate::year(.end)
#  } else if(.freq == 4){
#    quarter = as.numeric(format(.end, "%m"))/3
#    .end = lubridate::year(.end) + (quarter - 1)/4
#  } else if(.freq == 12) {
#    .end = lubridate::year(.end) + (lubridate::month(.end)-1)/12
#  } else {
#    .end <- .end
#  }
#}
.ts <- stats::ts(
.data[,names(.data) != .date],
start = .start,
end = .end,
frequency = .freq
)
.ts
#    .end = lubridate::year(.end)
#  } else if(.freq == 4){
#    quarter = as.numeric(format(.end, "%m"))/3
#    .end = lubridate::year(.end) + (quarter - 1)/4
#  } else if(.freq == 12) {
#    .end = lubridate::year(.end) + (lubridate::month(.end)-1)/12
#  } else {
#    .end <- .end
#  }
#}
.ts <- stats::ts(
.data[,names(.data) != .date],
start = .start,
end = NULL,
frequency = .freq
)
.end <- numeric()
#    .end = lubridate::year(.end)
#  } else if(.freq == 4){
#    quarter = as.numeric(format(.end, "%m"))/3
#    .end = lubridate::year(.end) + (quarter - 1)/4
#  } else if(.freq == 12) {
#    .end = lubridate::year(.end) + (lubridate::month(.end)-1)/12
#  } else {
#    .end <- .end
#  }
#}
.ts <- stats::ts(
.data[,names(.data) != .date],
start = .start,
end = .end,
frequency = .freq
)
#    .end = lubridate::year(.end)
#  } else if(.freq == 4){
#    quarter = as.numeric(format(.end, "%m"))/3
#    .end = lubridate::year(.end) + (quarter - 1)/4
#  } else if(.freq == 12) {
#    .end = lubridate::year(.end) + (lubridate::month(.end)-1)/12
#  } else {
#    .end <- .end
#  }
#}
.ts <- stats::ts(
.data[,names(.data) != .date],
start = .start,
end = .end,
frequency = .freq
)
.end
#    .end = lubridate::year(.end)
#  } else if(.freq == 4){
#    quarter = as.numeric(format(.end, "%m"))/3
#    .end = lubridate::year(.end) + (quarter - 1)/4
#  } else if(.freq == 12) {
#    .end = lubridate::year(.end) + (lubridate::month(.end)-1)/12
#  } else {
#    .end <- .end
#  }
#}
.ts <- stats::ts(
.data[,names(.data) != .date],
start = .start,
#end = .end,
frequency = .freq
)
.ts <- stats::ts(
.data[,names(.data) != .date],
#start = .start,
end = .end,
frequency = .freq
)
if(is.null(.end)) {
.end = max(.data[[.date]])
if(.freq == 1){
.end = lubridate::year(.end)
} else if(.freq == 4){
quarter = as.numeric(format(.end, "%m"))/3
.end = lubridate::year(.end) + (quarter - 1)/4
} else if(.freq == 12) {
.end = lubridate::year(.end) + (lubridate::month(.end)-1)/12
} else {
.end <- .end
}
}
.ts <- stats::ts(
.data[,names(.data) != .date],
#start = .start,
end = .end,
frequency = .freq
)
.end
if(is.null(.end)) {
.end = max(.data[[.date]])
if(.freq == 1){
.end = lubridate::year(.end)
} else if(.freq == 4){
quarter = as.numeric(format(.end, "%m"))/3
.end = lubridate::year(.end) + (quarter - 1)/4
} else if(.freq == 12) {
.end = lubridate::year(.end) + (lubridate::month(.end)-1)/12
} else {
.end <- .end
}
}
.end
.end = NULL
if(is.null(.end)) {
.end = max(.data[[.date]])
if(.freq == 1){
.end = lubridate::year(.end)
} else if(.freq == 4){
quarter = as.numeric(format(.end, "%m"))/3
.end = lubridate::year(.end) + (quarter - 1)/4
} else if(.freq == 12) {
.end = lubridate::year(.end) + (lubridate::month(.end)-1)/12
} else {
.end <- .end
}
}
.ts <- stats::ts(
.data[,names(.data) != .date],
#start = .start,
end = .end,
frequency = .freq
)
.ts
.ts %>% str()
AirPassengers %>% str()
devtools::load_all(".")
imae %>% dts_df_to_ts()
imae %>% dts_df_to_ts() %>% str()
df
df <- imae
df
class(df)
devtools::load_all(".")
imae %>% dts_stl_plot()
imae %>% dts_df_to_ts() %>% str()
.names <- names(data) != .date
.names
data <- imae
names(data) != .date
.names <- names(data)[names(data) != .date]
.names
if (length(.names) == 1) {
.ts <- stats::ts(
data[[.names]],
start = .start, end = end, frequency = .freq
)
} else {
.ts <- stats::ts(
data[, .names],
start = .start, end = end, frequency = .freq
)
}
data[[.names]]
.ts <- stats::ts(
data[[.names]],
start = .start, end = end, frequency = .freq
)
data[[.names]]
.start
end
.freq
devtools::load_all(".")
imae %>% dts_df_to_ts() %>% str()
imae %>% dts_df_to_ts()
imae %>% dts_stl_plot()
devtools::load_all('~/Projects/dtseries')
#| echo: false
imae <- datafaro::get_data(
'A_IX',
.token = 'd2922856ee2ab135390f7de74718ebf8a376300a'
)
imae %>%
dts_stl_plot()
.partial = TRUE
.mts = FALSE
.interactions = FALSE
.select = NULL
set.seed(123)
phi <- 0.7
n <- 100
data <- arima.sim(model = list(ar = phi), n = n)
nombre <- NULL
type <- NULL
x <- NULL
y <- NULL
res <- list()
if(all(.interactions, !"mts" %in% class(data))){
.interactions <- FALSE
warning("No 'mts' provided. Ignoring '.interactions'.")
}
if(.interactions){
res[["acf"]] <- stats::acf(data, plot = F)
res[['pacf']] <- stats::pacf(data, plot = F)
stop("'.interactions' not implemented yet!")
} else {
if(!is.null(.select)){
data <- dts_select(data, .select)
}
if(all(!.mts, "mts" %in% class(data))){
data <- data[,1]
}
data <- dts_ts_to_df(data)
nombres <- names(data)[names(data) != "date"]
for (.n in nombres) {
data |>
dplyr::select(date, {{.n}}) |>
dts_df_to_ts() -> .data
.data |>
stats::acf(plot = F) -> .acf
.acf <- data.frame(x = .acf$lag, y = .acf$acf)
res[[.n]] <- list(acf = .acf)
if(.partial){
.data |>
stats::pacf(plot = F) -> .pacf
.pacf <- data.frame(x = .pacf$lag, y = .pacf$acf)
res[[.n]][['pacf']] <- .pacf
}
res[[.n]] <- dplyr::bind_rows(res[[.n]], .id = "type")
}
}
stats::acf(data, plot = F)
stats::pacf(data, plot = F)
if(!is.null(.select)){
data <- dts_select(data, .select)
}
if(all(!.mts, "mts" %in% class(data))){
data <- data[,1]
}
data <- dts_ts_to_df(data)
data
devtools::load_all(".")
data <- dts_ts_to_df(data)
data
nombres <- names(data)[names(data) != "date"]
nombres
.n <- 'ts'
data |>
dplyr::select(date, {{.n}})
data |>
dplyr::select(date, {{.n}}) |>
dts_df_to_ts() -> .data
.data
.data
.data |>
stats::acf(plot = F)
.acf <- data.frame(x = .acf$lag, y = .acf$acf)
.acf
.data |>
stats::acf(plot = F) -> .acf
.acf <- data.frame(x = .acf$lag, y = .acf$acf)
res[[.n]] <- list(acf = .acf)
res
.data |>
stats::pacf(plot = F) -> .pacf
.pacf <- data.frame(x = .pacf$lag, y = .pacf$acf)
res[[.n]][['pacf']] <- .pacf
res
res[[.n]] <- dplyr::bind_rows(res[[.n]], .id = "type")
res
.rows <- NULL
.cols <- NULL
if(ncol(data) > 2){
.rows <- ggplot2::vars(nombre)
}
if(.partial){
.cols <- ggplot2::vars(type)
}
.cols
res
res |>
dplyr::bind_rows(.id = "nombre")
res |>
dplyr::bind_rows(.id = "nombre")|>
dplyr::group_by(type, nombre)
res |>
dplyr::bind_rows(.id = "nombre")|>
dplyr::group_by(type, nombre) |>
dplyr::slice(-1)
res |>
dplyr::bind_rows(.id = "nombre")|>
dplyr::group_by(type, nombre)
res
res |>
dplyr::bind_rows(.id = "nombre")|>
dplyr::group_by(type, nombre) |>
#dplyr::slice(-1) |>
dplyr::filter(x != 0) |>
ggplot2::ggplot(ggplot2::aes(x = x, y = y)) +
ggplot2::geom_point(size = 1) +
ggplot2::geom_segment(ggplot2::aes(xend = x, y = 0, yend = y)) +
ggplot2::geom_hline(yintercept = 0) +
ggplot2::geom_hline(yintercept = 2/sqrt(nrow(data)), color = "blue", linetype = "dashed") +
ggplot2::geom_hline(yintercept = -2/sqrt(nrow(data)), color = "blue", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::facet_grid(rows = .rows, cols = .cols, scales = "free") +
ggplot2::ylab("") +
ggplot2::xlab("")
arima.sim(n = 100)
arima.sim(n = 100, model = list(order = c(1, 0, 0)))
arima.sim(model = list(ar = -0.7), n = 100)
arima.sim(model = list(ar = -0.7), n = 100) %>% clipr::write_clip()
